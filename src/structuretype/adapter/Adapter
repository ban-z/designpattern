“接口隔离”模式：
    在组件构建的过程中，某些接口之间的依赖经常会带来很多问题，甚至根本无法实现。
    采用添加一层间接（稳定）接口，来隔离本来就互相紧密关联的接口是一种常见的方案。

    典型模式：
        Facade
        Proxy
        Adapter
        Mediator

    Adapter模式：
        动机：在软件系统中，由于应用环境的变化，常常需要将“一些现存的对象”放在新的环境中应用，但是新环境要求的接口是这些现存对象所不满足的。

        如何应对这种“迁移的变化”？如何既能利用现有对象的良好实现，幽能同时满足新的应用环境所需求的接口？

        模式定义：
            将一个类的接口，转换为用户希望的另一个接口, Adapter模式使得原本由于就扣不兼容而不能在一起工作的那些类可以一起工作


        要点总结：
            Adapter模式主要用于“希望复用一些现存的类，但是接口又与复用环境要求不一致”的情况，
            在遗留代码复用，类库迁移等方面非常有用

            GOF定义了两种Adapter模式的实现结构：对象设配器和类适配器。但采用类适配器采用“多继承”的方式，
            一般不推荐使用。对象适配器采用“对象组合”的方式，更符合松耦合精神

            Adapter可以采用非常灵活的实现，不必拘泥于GOF定义的两种结构。
            例如：完全可以将Adapter模式中“现存对象”作为新的接口方法参数，来达到适配的目的