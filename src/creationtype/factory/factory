工厂模式：
	定义一个用于创建对象的接口，让子类决定实例化哪一个类。
	Factory Method使得一个类的实例化延迟（目的：解耦，手段：抽象类）到子类


    要点总结：
	    FactoryMethod用于隔离类对象的使用者和具体类型之间的耦合关系。面对一个经常变化的具体类型，紧耦合关系（new）会导致软件的脆弱

	    FM通过面向对象的手法，将所有要创建的具体对象工作延迟到子类，从而实现一种扩展（而非更改）的策略，较好的解决了这种紧耦合关系

	    FM解决“单个对象”的需求变化。缺点在于要求创建方法、参数相同

抽象工厂：
	动机：在软件系统中，经常面临着“一系列相互依赖的对象”的创建工作；同时，由于需求的变化，往往存在更多系列对象的创建工作

		如何应对这种变化？如何绕过常规的对象创建方法（new），提供一种“封装机制”来避免客户程序和这种“多系列具体对象的创建工作”的紧耦合？

    模式定义：提供一个接口，让该接口负责创建一系列“相关或者相互依赖的对象”，而无需指定他们具体的类

    要点总结：
        如果没有对应“多系列对象构建”的需求变化，则没有必要使用AF模式，这时候简单工厂完全可以
        “系列对象”指的是再某一特定系列下的对象之间有相互依赖，或作用的关系。不同系列对象之间不能相互依赖
        AF模式主要在于应对“新系列”的需求变动。其缺点在于难以应对“新对象”的需求变动