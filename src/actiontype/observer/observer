”组件协作“模式：
    现代软件专业分工之后的第一个结果是”框架与应用程序的划分，“组件协作”模式通过晚期绑定，来实现
    框架与应用程序之间的松耦合，是二者之间协作时常用的模式。

    典型模式：
        Template Method
        Strategy
        Observer / Event

观察者模式：
    模式定义：定义对象间的一种一对多（变化）的依赖关系，以便当一个对象（Subject）的状态发生改变时，所有依赖于它的对象都得到通知并自动更新

    动机：在软件构建的过程中，我们需要为某些对象建立一种“通知依赖关系”————一个对象（目标对象）的状态发生改变，所有的依赖对象（观察者对象）都将得到通知。
          如果这样的依赖关系过于紧密，将使软件不能很好的抵御变化。

    使用面向对象技术，可以将这种依赖关系弱化，并形成一种稳定的依赖关系，从而实现软件体系结构的松耦合。

    要点总结：使用面向对象的抽象，Obsever模式使得我们可以独立的改变目标与观察者，从而使二者之间的依赖关系达到松耦合
            目标发送通知时，无需指定观察者，通知（就可以携带信息作为参数）会自动传播
            观察着自己决定是否需要订阅通知，目标对象对此一无所知
            Observer模式是基于事件的UI框架常用的设计模式，也是MVC中重要的一部分